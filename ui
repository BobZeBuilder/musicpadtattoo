import controlP5.*;
import ddf.minim.*;
import ddf.minim.analysis.*;

ControlP5 cp5;
Minim minim;
AudioPlayer player;
FFT fft;

void setup() {
  size(800, 800);
  minim = new Minim(this);
  player = minim.loadFile("musicloop1.mp3", 2048);
  fft = new FFT(player.bufferSize(), player.sampleRate());
  
  cp5 = new ControlP5(this);

  // Sliders
  cp5.addSlider("Slider1")
     .setPosition(50, 50)
     .setSize(40, height-height/4)
     .setRange(0, 100);

  // Knobs
  cp5.addKnob("Volume")
       .setPosition(25, height-height/8)
       .setRadius(40)
       .setValue(50)
       .setRange(0, 100);
  for (int i = 0; i < 4; i++) {
    cp5.addKnob("Knob" + (i + 1))
       .setPosition(width/6+width/10 + i * width/6, height/2)
       .setRadius(40)
       .setValue(50)
       .setRange(0, 100);
  }

  // Pads
  for (int i = 0; i < 8; i++) {
    int x = i % 4;
    int y = i / 4;
    cp5.addButton("Pad" + (i + 1))
       .setPosition(width/6 + x * width/5, height/2+height/8 + y * width/5)
       .setSize(width/6, width/6);
  }

  // Start the audio
  player.play();
}

void draw() {
  background(30);

  // Perform FFT analysis
  fft.forward(player.mix);

  // Draw waveform display
  stroke(255);
  noFill();
  beginShape();
  
  for (int i = 0; i < fft.specSize(); i++) {
    float x = map(i, 0, fft.specSize(), width/4, width-width/10);
    float y = map(fft.getBand(i), 0, 50, height/2-height/10, height/3); // Mapping frequency values to screen height
    
    vertex(x, y);
  }
  
  endShape();
}
